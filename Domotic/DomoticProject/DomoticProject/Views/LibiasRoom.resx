<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pctDeviceStateOff.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEASABIAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0M
        DgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAz/wAARCABWAFYDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9
        /KKKKACiijNABRRuzRuFFwCigtigHNABRRRQAUUUUAJjikMef505TuH+NFFgI2/dMOnzdPU1yXxU+Lun
        /CrSYproS3N3dNstLODDS3R6dOioCRliQBkckkA9ZdlVi3OdqryTnGPfNfFWufE7/hYHxd/t+8bFpI7R
        2kbDP2aDDKmB0B6n6nPFc9apyo0p03I6jx/8b/iNrkU1yJl0SyUc21gys0YGfvSsN3pyuAcdAc1xOn/G
        fxdps6yw+KNeVmOVMl19oB/2VWUsufYqe5xwa7e51S3020+1TyR+Sqg7ywIdcAAbc98GvJF+590qCMHP
        8XFefWlJao6FTR6/8NP267zwtrtrp3xBMH9k3j+TD4gt49iW784S6QZVQ3P72Mhfl+4oDOPqXTrhbi1V
        1kEyuNyuCCGB6EY4xjp7V+eWsaND4k0y4sbgZjvE8st3TBBBHuNoI91Fe3/8EyvjVe+JvAmqeDdWkkkv
        vCbRm1MrZItXyBEO58plPPQLIijG2t8PiG3aRlUppao+pqKKK9EwCiiigAHSiiigDnfi0Zx8MPEf2bP2
        j+yrrysdd/lNtx+NfCqlTENvCtyMenb9MV+gmoQpc27RyJ5kcgKMpH3geMfjmvgvxZ4Vm8C+KtQ0W43G
        TTJ2g3Fceao+449mUhvzrzsdF6NHRQM/byD3AwD6UZoHSiuDXqdA5Cd2N20N6fT/AOvWp/wTZm8/9rPx
        EYiwhk0W+kwPuj/TbXA/DLD8TXL+LvECeGPDl1eFk82JcRIx/wBY54Hvx1OOwJ7c+uf8ErfhhcWmieJf
        GNxGwGovHplg7jDOkZLTSfRnZR9YjXRhotzuZ1dj7Cooor2DjCiiigAAwKKKKAI5k37f9nPf2rw39r74
        QLrOhr4osY999paAXqgf8fFqD8zZ7FAWP+7uPVRXurKG69qyvGkNvceGNRhupmgtpbWVJZFALRoVIZsd
        8A5xg56YrOpHmVioy5Xc+CQuFXudo5xjd2zjtnrj0xQkbSN9eB9SRjP61h+HdctdatZJP+E8+HthHHKU
        hF6WilePqHYLcOvOegY/WovE3iaPQ5EW28afD/UC4Y7rZ3PlEcd5e+T69K894Cs3sdXto2uZmi+ENS/a
        Z+Nmn+E9Jka3tllcTXI+dbaNP9bOV6cAhV9XdB0Jr9JPh54G0z4deDtO0TR7VbPT9LhW2giXsq92P8TE
        klmPJZmJyTmvkH/gmf4Y0e1+LXie+GvWepax/Z3lrbwBcCB5leRyc7sblQcqM54LYOPtW2k3hunXr612
        UKLpq0tzGpPm2JaKKK6DEKKKKACiiigArI8cWzXfhXVIkjE0ktlMixt918oeDnjnjrWvSFcmjYHqfll4
        Rv7zQFmST4c+AL6aSMB4btIJWhxkMQCcgncCc+2KNdsdSvdWnu2+HngnTUd+IYPKWJMAA44yDgMehFfp
        V8Tvh3p3xQ8D6p4d1NZf7N1i0ktZvJYI6bhgOpIwGU4ZScjIBwcV4j+zH/wT90f9nb4iS+JZtf1DxFeq
        jRacjwLbx2ivgNuwx8yTAPzDaoBb5eRjujiklsYypu559/wTU0u9T4n6/O/hvRdJtU0lY2mstjMWaYFU
        YqMYKqzD1x9K+0IX3D681HbwKVPy7dp7LtzwOf6ZqWKFYVwowPpXHUlzy5jWMbIdRRRUjCiiigAooooA
        KKKKAAqG6jNN8tcH5V+brx1oooAcBtooooAKKKKACiiigD//2Q==
</value>
  </data>
</root>